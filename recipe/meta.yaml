{% set version = "1.8.2" %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-r.methodss3
  version: {{ version|replace("-", "_") }}

source:
  fn: R.methodsS3_{{ version }}.tar.gz
  url:
    - {{ cran_mirror }}/src/contrib/R.methodsS3_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/R.methodsS3/R.methodsS3_{{ version }}.tar.gz
  sha256: 822d5e61dad4c91e8883be2b38d7b89f87492046d0fe345704eb5d2658927c2e

build:
  noarch: generic
  merge_build_host: true  # [win]
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ posix }}zip               # [win]
  host:
    - r-base
  run:
    - r-base

test:
  commands:
    - $R -e "library('R.methodsS3')"           # [not win]
    - "\"%R%\" -e \"library('R.methodsS3')\""  # [win]

about:
  home: https://CRAN.R-project.org/package=R.methodsS3
  license: LGPL (>= 2.1)
  summary: Methods that simplify the setup of S3 generic functions and S3 methods.  Major effort has been made in making definition of methods as simple as possible with a minimum of maintenance for package developers.  For example, generic functions are created automatically, if missing, and naming conflict are automatically
    solved, if possible.  The method setMethodS3() is a good start for those who in the future may want to migrate to S4.  This is a cross-platform package implemented in pure R that generates standard S3 methods.
  license_family: LGPL
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/LGPL-2.1

extra:
  recipe-maintainers:
    - conda-forge/r
